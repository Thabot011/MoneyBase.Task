// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MoneyBase.Persistence.Database;

#nullable disable

namespace MoneyBase.Persistence.Migrations
{
    [DbContext(typeof(RepositoryDbContext))]
    [Migration("20251027063213_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MoneyBase.Domain.Entities.Agent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AgentType")
                        .HasColumnType("int");

                    b.Property<int>("MaxChats")
                        .HasColumnType("int");

                    b.Property<Guid>("TeamId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.ToTable("Agent", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("fb8ae7f6-d7e0-4b4f-9dcf-1724359ef47e"),
                            AgentType = 0,
                            MaxChats = 4,
                            TeamId = new Guid("11111111-1111-1111-1111-111111111111")
                        },
                        new
                        {
                            Id = new Guid("8611e452-7928-4ca6-8ba8-6c4bfffc74f5"),
                            AgentType = 0,
                            MaxChats = 4,
                            TeamId = new Guid("33333333-3333-3333-3333-333333333333")
                        },
                        new
                        {
                            Id = new Guid("d8f367c4-7c5d-4978-9132-28af793186d1"),
                            AgentType = 0,
                            MaxChats = 4,
                            TeamId = new Guid("33333333-3333-3333-3333-333333333333")
                        },
                        new
                        {
                            Id = new Guid("63fcef60-59c8-4d7c-bf65-6b66d3d414f3"),
                            AgentType = 0,
                            MaxChats = 4,
                            TeamId = new Guid("66666666-6666-6666-6666-666666666666")
                        },
                        new
                        {
                            Id = new Guid("6eda5f9c-9284-4702-b6e5-684bbc797032"),
                            AgentType = 0,
                            MaxChats = 4,
                            TeamId = new Guid("66666666-6666-6666-6666-666666666666")
                        },
                        new
                        {
                            Id = new Guid("7d7094b1-2fc1-4943-b473-28e9b88aa806"),
                            AgentType = 0,
                            MaxChats = 4,
                            TeamId = new Guid("66666666-6666-6666-6666-666666666666")
                        },
                        new
                        {
                            Id = new Guid("2d99f557-8671-4eff-b461-c50871e16cc5"),
                            AgentType = 0,
                            MaxChats = 4,
                            TeamId = new Guid("66666666-6666-6666-6666-666666666666")
                        },
                        new
                        {
                            Id = new Guid("b9595f82-3cf4-46d3-b7e8-e27946f3f396"),
                            AgentType = 0,
                            MaxChats = 4,
                            TeamId = new Guid("66666666-6666-6666-6666-666666666666")
                        },
                        new
                        {
                            Id = new Guid("68c4ca08-3825-444b-bc73-e95d0ae574c1"),
                            AgentType = 0,
                            MaxChats = 4,
                            TeamId = new Guid("66666666-6666-6666-6666-666666666666")
                        },
                        new
                        {
                            Id = new Guid("835c96b0-6056-473c-ad26-93ccb557e480"),
                            AgentType = 1,
                            MaxChats = 6,
                            TeamId = new Guid("11111111-1111-1111-1111-111111111111")
                        },
                        new
                        {
                            Id = new Guid("bfd5bf77-839d-412f-a96d-191c05a63b45"),
                            AgentType = 1,
                            MaxChats = 6,
                            TeamId = new Guid("11111111-1111-1111-1111-111111111111")
                        },
                        new
                        {
                            Id = new Guid("a1dd117d-0c48-49ea-bf9c-109f5ca25705"),
                            AgentType = 1,
                            MaxChats = 6,
                            TeamId = new Guid("33333333-3333-3333-3333-333333333333")
                        },
                        new
                        {
                            Id = new Guid("1a44ed26-47e4-477b-8a03-bab0d8926311"),
                            AgentType = 1,
                            MaxChats = 6,
                            TeamId = new Guid("55555555-5555-5555-5555-555555555555")
                        },
                        new
                        {
                            Id = new Guid("c3c192a8-4385-4bfd-8363-67c6b8bfc0df"),
                            AgentType = 1,
                            MaxChats = 6,
                            TeamId = new Guid("55555555-5555-5555-5555-555555555555")
                        },
                        new
                        {
                            Id = new Guid("1ca1a930-a8af-4bff-b70c-d8dcb3375d39"),
                            AgentType = 2,
                            MaxChats = 8,
                            TeamId = new Guid("33333333-3333-3333-3333-333333333333")
                        },
                        new
                        {
                            Id = new Guid("e5f8a12d-dc8d-48f8-a754-bf5d9eaf38ab"),
                            AgentType = 3,
                            MaxChats = 5,
                            TeamId = new Guid("11111111-1111-1111-1111-111111111111")
                        });
                });

            modelBuilder.Entity("MoneyBase.Domain.Entities.Chat", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AgentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ChatStatus")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("LastPollAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("Id");

                    b.HasIndex("AgentId");

                    b.ToTable("Chat", (string)null);
                });

            modelBuilder.Entity("MoneyBase.Domain.Entities.Shift", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeOnly>("EndTime")
                        .HasColumnType("time");

                    b.Property<int>("ShiftType")
                        .HasColumnType("int");

                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.ToTable("Shift", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111111"),
                            EndTime = new TimeOnly(16, 0, 0),
                            ShiftType = 0,
                            StartTime = new TimeOnly(8, 0, 0)
                        },
                        new
                        {
                            Id = new Guid("22222222-2222-2222-2222-222222222222"),
                            EndTime = new TimeOnly(0, 0, 0),
                            ShiftType = 1,
                            StartTime = new TimeOnly(16, 0, 0)
                        },
                        new
                        {
                            Id = new Guid("33333333-3333-3333-3333-333333333333"),
                            EndTime = new TimeOnly(8, 0, 0),
                            ShiftType = 2,
                            StartTime = new TimeOnly(0, 0, 0)
                        },
                        new
                        {
                            Id = new Guid("44444444-4444-4444-4444-444444444444"),
                            EndTime = new TimeOnly(0, 0, 0),
                            ShiftType = 3,
                            StartTime = new TimeOnly(0, 0, 0)
                        });
                });

            modelBuilder.Entity("MoneyBase.Domain.Entities.Team", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ShiftId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TeamName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("Id");

                    b.HasIndex("ShiftId");

                    b.ToTable("Team", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111111"),
                            ShiftId = new Guid("11111111-1111-1111-1111-111111111111"),
                            TeamName = "Team A"
                        },
                        new
                        {
                            Id = new Guid("33333333-3333-3333-3333-333333333333"),
                            ShiftId = new Guid("22222222-2222-2222-2222-222222222222"),
                            TeamName = "Team B"
                        },
                        new
                        {
                            Id = new Guid("55555555-5555-5555-5555-555555555555"),
                            ShiftId = new Guid("33333333-3333-3333-3333-333333333333"),
                            TeamName = "Team C"
                        },
                        new
                        {
                            Id = new Guid("66666666-6666-6666-6666-666666666666"),
                            ShiftId = new Guid("44444444-4444-4444-4444-444444444444"),
                            TeamName = "Overflow team"
                        });
                });

            modelBuilder.Entity("MoneyBase.Domain.Entities.Agent", b =>
                {
                    b.HasOne("MoneyBase.Domain.Entities.Team", "Team")
                        .WithMany("Agents")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Team");
                });

            modelBuilder.Entity("MoneyBase.Domain.Entities.Chat", b =>
                {
                    b.HasOne("MoneyBase.Domain.Entities.Agent", "Agent")
                        .WithMany("Chats")
                        .HasForeignKey("AgentId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Agent");
                });

            modelBuilder.Entity("MoneyBase.Domain.Entities.Team", b =>
                {
                    b.HasOne("MoneyBase.Domain.Entities.Shift", "Shift")
                        .WithMany("Teams")
                        .HasForeignKey("ShiftId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Shift");
                });

            modelBuilder.Entity("MoneyBase.Domain.Entities.Agent", b =>
                {
                    b.Navigation("Chats");
                });

            modelBuilder.Entity("MoneyBase.Domain.Entities.Shift", b =>
                {
                    b.Navigation("Teams");
                });

            modelBuilder.Entity("MoneyBase.Domain.Entities.Team", b =>
                {
                    b.Navigation("Agents");
                });
#pragma warning restore 612, 618
        }
    }
}
